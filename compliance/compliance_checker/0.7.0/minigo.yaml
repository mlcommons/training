
- KEY:
    NAME:  save_model
    REQ:   AT_LEAST_ONE
    CHECK:
        - "s['in_epoch']"
        - "v['value']['iteration'] == s['last_epoch']"
        - "not s['model_saved']"
    POST:  " s['model_saved'] = True ; s['save_model_ts'].append(ll.timestamp) "


- KEY:
    NAME:  global_batch_size
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] > 0"

- KEY:
    NAME:  opt_base_learning_rate
    REQ:   EXACTLY_ONE
    CHECK: " len(v['value']) > 0"

- KEY:
    NAME:  opt_learning_rate_decay_boundary_steps
    REQ:   EXACTLY_ONE
    CHECK: " len(v['value']) > 0"

- KEY:
    NAME:  opt_base_learning_rate
    REQ:   EXACTLY_ONE
    CHECK: " len(v['value']) > 0 "

- KEY:
    NAME:  opt_weight_decay
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] > 0"

- KEY:
    NAME:  filter_amount
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] >= 0 "

- KEY:
    NAME:  num_games
    REQ:   AT_LEAST_ONE
    CHECK: " v['value'] > 0"

- KEY:
    NAME:  num_readouts
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] > 0 "

- KEY:
    NAME:  value_init_penalty
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] >= 0 "

- KEY:
    NAME:  holdout_pct
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] >= 0 "

- KEY:
    NAME:  disable_resign_pct
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] >= 0 "

- KEY:
    NAME:  resign_threshold
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] >= 0 "

- KEY:
    NAME:  parallel_games
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] >= 0 "

- KEY:
    NAME:  virtual_losses
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] > 0"

- KEY:
    NAME:  gating_win_rate
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] >= 0 "

- KEY:
    NAME:  window_size
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] >= 0 "

- KEY:
    NAME:  eval_games
    REQ:   EXACTLY_ONE
    CHECK: " v['value'] > 0 "

# block_start/stop keys are not required in minigo, so re-define without REQ
- KEY:
    NAME: block_start

- KEY:
    NAME: block_stop

